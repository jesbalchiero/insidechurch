basePath: /api
definitions:
  handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.LoginResponse:
    properties:
      token:
        type: string
      user:
        properties:
          email:
            type: string
          id:
            type: integer
          name:
            type: string
        type: object
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  handlers.RegisterResponse:
    properties:
      token:
        type: string
      user:
        properties:
          email:
            type: string
          id:
            type: integer
          name:
            type: string
        type: object
    type: object
  handlers.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API para o sistema Inside Church
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Inside Church API
  version: "1.0"
paths:
  /api/login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário e retorna um token JWT
      parameters:
      - description: Credenciais de login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Login do usuário
      tags:
      - auth
  /api/register:
    post:
      consumes:
      - application/json
      description: Cria um novo usuário na plataforma
      parameters:
      - description: Dados de registro
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Registrar novo usuário
      tags:
      - auth
  /api/user:
    get:
      description: Retorna os dados do usuário autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: Buscar usuário autenticado
      tags:
      - user
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
