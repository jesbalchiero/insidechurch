version: '3.8'

services:
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - user-service
      - event-service
      - notification-service
      - frontend
    networks:
      - insidechurch-network

  auth-service:
    build: ./backend/auth-service
    networks:
      - insidechurch-network
    expose:
      - "8080"

  user-service:
    build: ./backend/user-service
    networks:
      - insidechurch-network
    expose:
      - "8080"

  event-service:
    build: ./backend/event-service
    networks:
      - insidechurch-network
    expose:
      - "8080"

  notification-service:
    build: ./backend/notification-service
    networks:
      - insidechurch-network
    expose:
      - "8080"

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    ports:
      - "3000:3000"
    environment:
      - NUXT_PUBLIC_API_BASE=http://api.insidechurch.local
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - frontend_cache:/app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - insidechurch-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=insidechurch
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - insidechurch-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 5s

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - insidechurch-network

networks:
  insidechurch-network:
    driver: bridge

volumes:
  postgres_data:
  backend_cache:
  frontend_cache: 